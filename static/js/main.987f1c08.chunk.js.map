{"version":3,"sources":["components/Index.js","components/GPlace.js","components/Add.js","components/Dropzone/Dropzone.js","components/ImageUpload.js","App.js","index.js"],"names":["Index","useState","history","useHistory","className","id","to","type","accept","onChange","e","file","target","files","reader","FileReader","onload","evt","bstr","result","wb","XLSX","wsname","SheetNames","ws","Sheets","dataString","dataStringLines","split","headers","list","i","length","row","obj","j","d","substring","Object","values","filter","x","push","localStorage","setItem","processData","sheet_to_csv","header","readAsBinaryString","hidden","for","GPlace","placeInputRef","useRef","place","setPlace","addr","getItem","useEffect","initPlaceAPI","autocomplete","window","google","maps","places","Autocomplete","current","event","addListener","getPlace","address","formatted_address","ref","value","required","style","marginTop","lineHeight","Add","bath","bed","desc","loadMap","setLoadMap","callback","googleMapScript","document","createElement","src","body","appendChild","addEventListener","loadGoogleMapScript","placeholder","max","min","maxLength","rows","Dropzone","fileInputRef","modalImageRef","modalRef","progressRef","uploadRef","uploadModalRef","selectedFiles","setSelectedFiles","validFiles","setValidFiles","unsupportedFiles","setUnsupportedFiles","errorMessage","setErrorMessage","filteredArr","reduce","acc","find","item","name","concat","preventDefault","handleFiles","validateFile","prevArray","indexOf","fileSize","size","Math","floor","log","parseFloat","pow","toFixed","removeFile","index","findIndex","index2","index3","splice","uploadFiles","a","display","innerHTML","formData","FormData","append","axios","post","onUploadProgress","progressEvent","uploadPercentage","loaded","total","width","catch","backgroundColor","onClick","onDragOver","onDragEnter","onDragLeave","onDrop","dataTransfer","click","multiple","map","data","invalid","readAsDataURL","backgroundImage","openImageModal","fileName","lastIndexOf","class","ImageUpload","App","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.987f1c08.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport * as XLSX from \"xlsx\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst Index = () => {\r\n    const [data, setData] = useState([]);\r\n    let history = useHistory();\r\n  // process CSV data\r\n  const processData = dataString => {\r\n    const dataStringLines = dataString.split(/\\r\\n|\\n/);\r\n    const headers = dataStringLines[0].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);\r\n    \r\n    const list = [];\r\n    for (let i = 1; i < dataStringLines.length; i++) {\r\n      const row = dataStringLines[i].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);\r\n      if (headers && row.length === headers.length) {\r\n        const obj = {};\r\n        for (let j = 0; j < headers.length; j++) {\r\n          let d = row[j];\r\n          if (d.length > 0) {\r\n            if (d[0] === '\"')\r\n              d = d.substring(1, d.length - 1);\r\n            if (d[d.length - 1] === '\"')\r\n              d = d.substring(d.length - 2, 1);\r\n          }\r\n          if (headers[j]) {\r\n            obj[headers[j]] = d;\r\n          }\r\n        }\r\n        if (Object.values(obj).filter(x => x).length > 0) {\r\n          list.push(obj);\r\n          localStorage.setItem('add',list[0]['address']);\r\n          localStorage.setItem('bath',list[0]['Bathroom']);\r\n          localStorage.setItem('bed',list[0]['Bedroom']);\r\n          localStorage.setItem('desc',list[0]['Desc']);\r\n          history.push('/add');\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // handle file upload\r\n  const handleFileUpload = e => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = (evt) => {\r\n      /* Parse data */\r\n      const bstr = evt.target.result;\r\n      const wb = XLSX.read(bstr, { type: 'binary' });\r\n      /* Get first worksheet */\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      /* Convert array of arrays */\r\n      const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\r\n      processData(data);\r\n    };\r\n    reader.readAsBinaryString(file);\r\n  }\r\n    return(\r\n        <>\r\n        <div className=\"index\">\r\n        <h1>WELCOME</h1>\r\n        </div>\r\n            <Link className=\"btn btn-dark\" id=\"btn1\" to=\"/add\">Add from Scratch\r\n            </Link>\r\n            <div className=\"centered\">\r\n            <input\r\n            id=\"btn2\"\r\n            type=\"file\"\r\n            accept=\".csv\"\r\n            onChange={handleFileUpload}\r\n            hidden\r\n            />\r\n            <label className=\"btn btn-success\" id=\"btn2\" for=\"btn2\">upload as CSV</label>\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index;","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nconst GPlace = () => {\r\n  const placeInputRef = useRef(null);\r\n  const [place, setPlace] = useState(null);\r\n\tconst addr = localStorage.getItem('add');\r\n\r\n  useEffect(() => {\r\n    initPlaceAPI();\r\n  }, []);\r\n\r\n  // initialize the google place autocomplete\r\n  const initPlaceAPI = () => {\r\n    let autocomplete = new window.google.maps.places.Autocomplete(placeInputRef.current);\r\n    new window.google.maps.event.addListener(autocomplete, \"place_changed\", function () {\r\n      let place = autocomplete.getPlace();\r\n      setPlace({\r\n        address: place.formatted_address,\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input type=\"text\" \r\n\t\t\t\t   className=\"form-control form-control-lg\" ref={placeInputRef} value={addr?addr:place}  required/>\r\n      {place && <div style={{ marginTop: 20, lineHeight: '0px' }}>\r\n      </div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GPlace;","import React,{useState,useEffect} from \"react\";\r\nimport {BrowserRouter as Router,Link,Route,Switch} from 'react-router-dom';\r\nimport GPlace from \"./GPlace\";\r\n\r\n// API key of the google map\r\nconst GOOGLE_MAP_API_KEY = 'AIzaSyDfL0pH1w-hHzX9nCRLex-u77rExH-U7lI';\r\n\r\n// load google map script\r\nconst loadGoogleMapScript = (callback) => {\r\n  if (typeof window.google === 'object' && typeof window.google.maps === 'object') {\r\n    callback();\r\n  } else {\r\n    const googleMapScript = document.createElement(\"script\");\r\n    googleMapScript.src = `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_MAP_API_KEY}&libraries=places`;\r\n    window.document.body.appendChild(googleMapScript);\r\n    googleMapScript.addEventListener(\"load\", callback);\r\n  }\r\n}\r\n\r\nexport default function Add(){\r\n\tconst bath = localStorage.getItem('bath');\r\n\tconst bed = localStorage.getItem('bed');\r\n\tconst desc = localStorage.getItem('desc');\r\n\tconst [loadMap, setLoadMap] = useState(false);\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\t\tloadGoogleMapScript(() => {\r\n\t\t  setLoadMap(true)\r\n\t\t});\r\n\t  }, []);\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"w-75 mx-auto shadow p-5\">\r\n\t\t\t\t\t<h2 className=\"text-center mb-4\">Add Data</h2>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t{!loadMap ? <div>Loading...</div> : <GPlace />}\r\n\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control form-control-lg\"\r\n                                placeholder=\"Bedroom\"\r\n\t\t\t\t\t\t\t\tmax=\"10\"\r\n\t\t\t\t\t\t\t\tmin=\"1\"\r\n\t\t\t\t\t\t\t\tmaxLength='10'\r\n\t\t\t\t\t\t\t\tvalue={bed?bed:''}\r\n\t\t\t\t\t\t\t\trequired\r\n                                 />\r\n                        </div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n                            <input\r\n                                type=\"number\"\r\n                                className=\"form-control form-control-lg\"\r\n                                placeholder=\"Bathroom\"\r\n\t\t\t\t\t\t\t\tmax=\"5\"\r\n\t\t\t\t\t\t\t\tmin=\"1\"\r\n\t\t\t\t\t\t\t\tmaxLength='5'\r\n\t\t\t\t\t\t\t\tvalue={bath?bath:''}\r\n\t\t\t\t\t\t\t\trequired\r\n                                 />\r\n                        </div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<textarea value={desc?desc:''} className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"5\" placeholder=\"Description of the Property\" ></textarea>\r\n                        </div>\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Link className=\"btn btn-primary btn-block\" to=\"/imgup\"  type=\"submit\"\r\n\t\t\t\t\t\t>Submit</Link>\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t</div>\r\n\t\t\t\r\n          </div>\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Dropzone = () => {\r\n  let history = useHistory();\r\n  const fileInputRef = useRef();\r\n  const modalImageRef = useRef();\r\n  const modalRef = useRef();\r\n  const progressRef = useRef();\r\n  const uploadRef = useRef();\r\n  const uploadModalRef = useRef();\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [validFiles, setValidFiles] = useState([]);\r\n  const [unsupportedFiles, setUnsupportedFiles] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let filteredArr = selectedFiles.reduce((acc, current) => {\r\n      const x = acc.find((item) => item.name === current.name);\r\n      if (!x) {\r\n        return acc.concat([current]);\r\n      } else {\r\n        return acc;\r\n      }\r\n    }, []);\r\n    setValidFiles([...filteredArr]);\r\n  }, [selectedFiles]);\r\n\r\n  const preventDefault = (e) => {\r\n    e.preventDefault();\r\n    // e.stopPropagation();\r\n  };\r\n\r\n  const dragOver = (e) => {\r\n    preventDefault(e);\r\n  };\r\n\r\n  const dragEnter = (e) => {\r\n    preventDefault(e);\r\n  };\r\n\r\n  const dragLeave = (e) => {\r\n    preventDefault(e);\r\n  };\r\n\r\n  const fileDrop = (e) => {\r\n    preventDefault(e);\r\n    const files = e.dataTransfer.files;\r\n    if (files.length) {\r\n      handleFiles(files);\r\n    }\r\n  };\r\n\r\n  const filesSelected = () => {\r\n    if (fileInputRef.current.files.length) {\r\n      handleFiles(fileInputRef.current.files);\r\n    }\r\n  };\r\n\r\n  const fileInputClicked = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handleFiles = (files) => {\r\n    for (let i = 0; i < files.length; i++) {\r\n      if (validateFile(files[i])) {\r\n        setSelectedFiles((prevArray) => [...prevArray, files[i]]);\r\n      } else {\r\n        files[i][\"invalid\"] = true;\r\n        setSelectedFiles((prevArray) => [...prevArray, files[i]]);\r\n        setErrorMessage(\"File type not permitted\");\r\n        setUnsupportedFiles((prevArray) => [...prevArray, files[i]]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const validateFile = (file) => {\r\n    const validTypes = [\"image/jpeg\", \"image/jpg\", \"image/png\"];\r\n    if (validTypes.indexOf(file.type) === -1) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const fileSize = (size) => {\r\n    if (size === 0) {\r\n      return \"0 Bytes\";\r\n    }\r\n    const k = 1024;\r\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\r\n    const i = Math.floor(Math.log(size) / Math.log(k));\r\n    return parseFloat((size / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\r\n  };\r\n\r\n  const fileType = (fileName) => {\r\n    return (\r\n      fileName.substring(fileName.lastIndexOf(\".\") + 1, fileName.length) ||\r\n      fileName\r\n    );\r\n  };\r\n\r\n  const removeFile = (name) => {\r\n    const index = validFiles.findIndex((e) => e.name === name);\r\n    const index2 = selectedFiles.findIndex((e) => e.name === name);\r\n    const index3 = unsupportedFiles.findIndex((e) => e.name === name);\r\n    validFiles.splice(index, 1);\r\n    selectedFiles.splice(index2, 1);\r\n    setValidFiles([...validFiles]);\r\n    setSelectedFiles([...selectedFiles]);\r\n    if (index3 !== -1) {\r\n      unsupportedFiles.splice(index3, 1);\r\n      setUnsupportedFiles([...unsupportedFiles]);\r\n    }\r\n  };\r\n\r\n  const openImageModal = (file) => {\r\n    const reader = new FileReader();\r\n    modalRef.current.style.display = \"block\";\r\n    reader.readAsDataURL(file);\r\n    reader.onload = function (e) {\r\n      modalImageRef.current.style.backgroundImage = `url(${e.target.result})`;\r\n    };\r\n  };\r\n\r\n  const closeModal = () => {\r\n    modalRef.current.style.display = \"none\";\r\n    modalImageRef.current.style.backgroundImage = \"none\";\r\n  };\r\n\r\n  const uploadFiles = async () => {\r\n    uploadModalRef.current.style.display = \"block\";\r\n    uploadRef.current.innerHTML = \"File(s) Uploading...\";\r\n    for (let i = 0; i < validFiles.length; i++) {\r\n      const formData = new FormData();\r\n      formData.append(\"image\", validFiles[i]);\r\n      formData.append(\"key\", \"3b23c8608d9c52a98ce4cefab37faccd\");\r\n\r\n      axios\r\n        .post(\"https://api.imgbb.com/1/upload\", formData, {\r\n          onUploadProgress: (progressEvent) => {\r\n            const uploadPercentage = Math.floor(\r\n              (progressEvent.loaded / progressEvent.total) * 100\r\n            );\r\n            progressRef.current.innerHTML = `${uploadPercentage}%`;\r\n            progressRef.current.style.width = `${uploadPercentage}%`;\r\n\r\n            if (uploadPercentage === 100) {\r\n              uploadRef.current.innerHTML = \"File(s) Uploaded\";\r\n              validFiles.length = 0;\r\n              setValidFiles([...validFiles]);\r\n              setSelectedFiles([...validFiles]);\r\n              setUnsupportedFiles([...validFiles]);\r\n              history.push(\"/\");\r\n            }\r\n          },\r\n        })\r\n        .catch(() => {\r\n          uploadRef.current.innerHTML = `<span class=\"error\">Error Uploading File(s)</span>`;\r\n          progressRef.current.style.backgroundColor = \"red\";\r\n        });\r\n    }\r\n  };\r\n\r\n  const closeUploadModal = () => {\r\n    uploadModalRef.current.style.display = \"none\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"container\">\r\n          {unsupportedFiles.length === 0 && validFiles.length ? (\r\n            <button className=\"file-upload-btn\" onClick={() => uploadFiles()}>\r\n              Submit\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {unsupportedFiles.length ? (\r\n            <p>Please remove all unsupported files.</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div\r\n            className=\"drop-container\"\r\n            onDragOver={dragOver}\r\n            onDragEnter={dragEnter}\r\n            onDragLeave={dragLeave}\r\n            onDrop={fileDrop}\r\n            onClick={fileInputClicked}\r\n          >\r\n            <div className=\"drop-message\">\r\n              <div className=\"upload-icon\"></div>\r\n              Drag & Drop files here or click to select file(s)\r\n            </div>\r\n            <input\r\n              ref={fileInputRef}\r\n              className=\"file-input\"\r\n              type=\"file\"\r\n              multiple\r\n              onChange={filesSelected}\r\n              hidden\r\n            />\r\n          </div>\r\n          <div className=\"file-display-container\">\r\n            {validFiles.map((data, i) => (\r\n              <div className=\"file-status-bar\" key={i}>\r\n                <div\r\n                  onClick={\r\n                    !data.invalid\r\n                      ? () => openImageModal(data)\r\n                      : () => removeFile(data.name)\r\n                  }\r\n                >\r\n                  <div className=\"file-type-logo\"></div>\r\n                  <div className=\"file-type\">{fileType(data.name)}</div>\r\n                  <span\r\n                    className={`file-name ${data.invalid ? \"file-error\" : \"\"}`}\r\n                  >\r\n                    {data.name}\r\n                  </span>\r\n                  <span className=\"file-size\">({fileSize(data.size)})</span>{\" \"}\r\n                  {data.invalid && (\r\n                    <span className=\"file-error-message\">({errorMessage})</span>\r\n                  )}\r\n                  <div class=\"form-check form-check-inline\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    id=\"inlineCheckbox1\"\r\n                    value=\"option1\"\r\n                  />\r\n                </div>\r\n                </div>\r\n                <div\r\n                  className=\"file-remove\"\r\n                  onClick={() => removeFile(data.name)}\r\n                >\r\n                  X\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"modal\" ref={modalRef}>\r\n          <div className=\"overlay\"></div>\r\n          <span className=\"close\" onClick={() => closeModal()}>\r\n            X\r\n          </span>\r\n          <div className=\"modal-image\" ref={modalImageRef}></div>\r\n        </div>\r\n\r\n        <div className=\"upload-modal\" ref={uploadModalRef}>\r\n          <div className=\"overlay\"></div>\r\n          <div className=\"close\" onClick={() => closeUploadModal()}>\r\n            X\r\n          </div>\r\n          <div className=\"progress-container\">\r\n            <span ref={uploadRef}></span>\r\n            <div className=\"progress\">\r\n              <div className=\"progress-bar\" ref={progressRef}></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dropzone;\r\n","import React from 'react';\r\nimport Dropzone from \"./Dropzone/Dropzone\";\r\n\r\nfunction ImageUpload() {\r\n  return (\r\n    <div className=\"container my-2\">\r\n      <p className=\"title text-center\">Drag and Drop Image Upload</p>\r\n      <div className=\"d-flex justify-content-center\">\r\n        <Dropzone />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUpload;","import React from 'react';\nimport \"./App.css\";\nimport Index from \"./components/Index\";\nimport Add from \"./components/Add\";\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom';\nimport ImageUpload from './components/ImageUpload';\n\nfunction App() {\n  \n  return (\n    <Router>\n  <div className=\"App\">\n    <Switch>\n      <Route exact path=\"/\" component={Index}/>\n      <Route exact path=\"/add\" component={Add}/>\n      <Route exact path=\"/imgup\" component={ImageUpload}/>\n    </Switch>\n  </div>\n  </Router>\n\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<React.StrictMode>\n    <App />\n  </React.StrictMode>, document.getElementById(\"root\"));\n"],"sourceRoot":""}